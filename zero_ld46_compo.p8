pico-8 cartridge // http://www.pico-8.com
version 19
__lua__
--zero
function dr(x,y,w,h,c)
	rectfill(x,y,x+w-1,y+h-1,c)
end

function drb(x,y,w,h,c)
	rect(x,y,x+w-1,y+h-1,c)
end

function merge_t(t1,t2)
	for k,v in pairs(t2) do 
		t1[k] = v 
	end
	
	return t1
end

function merge_arr(a,b)
	for bv in all(b) do
		add(a, bv)
	end
	
	return a
end
-->8
--objects
function rectangle(x,y,w,h)
	return {
		x=x,
		y=y,
		w=w,
		h=h,
		
		--get left
		get_l=function(self)
			return self.x
		end,
		
		--get right
		get_r=function(self)
			return self.x+self.w
		end,
		
		--get top
		get_t=function(self)
			return self.y
		end,
		
		--get bottom
		get_b=function(self)
			return self.y+self.h
		end,
		
		--half width
		get_hw=function(self)
			return self.w*0.5
		end,
	
		--half height
		get_hh=function(self)
			return self.h*0.5
		end,
		
		--midx
		get_mx=function(self)
			return self.x+self:get_hw()
		end,
		
		--midy
		get_my=function(self)
			return self.y+self:get_hh()
		end
	}
end

function obj(x,y,w,h,de)
	local t={
		de=de or false,
		col=de or false,
		ovlp=de or false,
	}
	
	return merge_t(t,rectangle(x,y,w,h))
end
-->8
--collision
col={
	check=function(self,a,b,incb)
			local l1=a:get_l()
			local r1=a:get_r()
			local t1=a:get_t()
			local b1=a:get_b()
			
			local l2=b:get_l()
			local r2=b:get_r()
			local t2=b:get_t()
			local b2=b:get_b()
			
			local midx1=a:get_mx()
			local midy1=a:get_my()
			
			local midx2=b:get_mx()
			local midy2=b:get_my()
			
			local cond=r1<l2 or l1>r2 or b1<t2 or t1>b2
			
			if incb then 
				cond=r1<=l2 or l1>=r2 or b1<=t2 or t1>=b2	
			end
			
			return not cond
	end,
}
-->8
--qtree
function qtree(x,y,w,h,cap)
	local t={
		cap=cap,
		col=col,
		
		tl=nil,
		tr=nil,
		bl=nil,
		br=nil,
		
		divided=false,
		items={},
		
		subdivide=function(self)
			local bx=self.x
			local by=self.y
			local bhw=self.w*0.5
			local bhh=self.h*0.5
			
			self.tl=qtree(bx,by,bhw,bhh,self.cap)
			self.tr=qtree(bx+bhw,by,bhw,bhh,self.cap)
			self.bl=qtree(bx,by+bhh,bhw,bhh,self.cap)
			self.br=qtree(bx+bhw,by+bhh,bhw,bhh,self.cap)
			
			self.divided=true
		end,
		
		insert=function(self,obj)
			if not col:check(self,obj,true) then
				return false				
			end
			
			if #self.items<self.cap then
				add(self.items,obj)
				return true
			else
				if not self.divided then
					self:subdivide()
				end
				
				if self.tl:insert(obj) then
					return true
				elseif self.tr:insert(obj) then
					return true
				elseif self.bl:insert(obj) then
					return true
				elseif self.br:insert(obj) then
					return true
				end
			end
		end,
		
		query=function(self,area)
			local items={}
			
			if not col:check(self,area,false) then
				return items				
			end
			
			for item in all(self.items) do
				if col:check(item,area,true) then
					add(items,item)
				end
			end
			
			if self.divided then
				items=merge_arr(items,self.tl:query(area))
				items=merge_arr(items,self.tr:query(area))
				items=merge_arr(items,self.bl:query(area))
				items=merge_arr(items,self.br:query(area))
			end
			
			return items
		end,
		
		getc=function(self) 
			local c={}
			
			add(c,self)
			
			if self.divided then
				c=merge_arr(c,self.tl:getc())
				c=merge_arr(c,self.tr:getc())
				c=merge_arr(c,self.bl:getc())
				c=merge_arr(c,self.br:getc())
			end
			
			return c
		end,
		
		gete=function(self)
			local e={}
			
			e=merge_arr(e,self.items)
			
			if self.divided then
				e=merge_arr(e,self.tl:gete())
				e=merge_arr(e,self.tr:gete())
				e=merge_arr(e,self.bl:gete())
				e=merge_arr(e,self.br:gete())
			end
			
			return e
		end
	}
	
	return merge_t(t,rectangle(x,y,w,h,c))
end
-->8
--debug util
function d_rb(items,c)
	for i in all(items) do
		rect(i.x,i.y,i.x+i.w-1,i.y+i.h-1)
	end
end

function d_rc(items,c)
	for i in all(items) do
		if i.de then
			rect(i.cea.x,i.cea.y,i.cea.x+i.cea.w-1,i.cea.y+i.cea.h-1,c)
		end		
	end
end

function _init()
	defdata()
	defstate()
	
	setscn(sc1)
	
	setfade("in")
end

function _update()
	_s.t+=1
	if _s.usts then
		_s.csc:u()
	end
	ftick()
end

function _draw()
	pal()
	cls()
	if _s.fs==1 then fade(_s.ft) end
	if _s.dsts then
		_s.csc:d()
	end
	dtltp()
	dtxt()
	dinv()
	ugo()
	uded()
end
-->8
--state
function defstate()
	_s={
	plyr={},
	t=0,
	
	usts=true,
	dsts=true,
	msts=true,
	
	ft=0,
	ftt=0.02,
	ftm=-1,
	fs=0,
	fcb=nil,
	
	cx=0,
	cy=0,
	cc=0,
	cr=0,
	cox=0,
	coy=0,
	cshk=0,
	
	csc={
		d=function()
		
		end,
		u=function()
		
		end
	},
	
	opool={},
	
	tltp=nil,
	
	atxt=nil,
	txtt=1,
	
	inv=false,
	invb={},
	invi=1,
	
	rmmode=false,
	rmid=nil,
	rmcx=0,
	rmcy=0,
	rmcw=0,
	rmch=0,
	oldpx=0,
	oldpy=0,
	
	pblts={},
	eblts={},
	
	enms={},
	
	gameover=false,
	ded=false
}
end

-->8
--scenes
sc1={
	i=function(s)
		_s.plyr=player(11*8,4*8)
		s.manms={
			{112,2,25}
		}
--		s.objs={}
--		s.objs=scnmap()
--		add(s.objs,s.p)
	end,
	
	u=function(s)
		_s.plyr:u()
		oblts(_s.pblts,enpl["e".._s.cc.."_".._s.cr])
		oblts(_s.eblts,{_s.plyr})
		oall(enpl["e".._s.cc.."_".._s.cr])
--		operate(s.objs)
		mapanm(s.manms)
--		s.p:u()
	end,
	
	d=function(s)
		if _s.rmmode then
			clip(_s.rmcx,_s.rmcy,_s.rmcw,_s.rmch)
		end
		
		map()
--		dall(s.objs)
		dall(_s.pblts)
		dall(_s.eblts)
		
		dall(enpl["e".._s.cc.."_".._s.cr])
		_s.plyr:d()
--		d_rb(s.objs, 11)
--		d_rc(s.objs, 10)
--		s.p:d()
--		print(fget(1,0),1,1,10)
		print(_s.plyr.hp.."/15",_s.cx,_s.cy,7)
		clip(0,0,128,128)
	end
}
-->8
--util
function dis(a,b)
	return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y))
end

--fade in/out
function setfade(t, cbfn)
	if t=="in" then
		_s.ft=1
		_s.ftm=-1
	elseif t=="out" then
		_s.ft=0
		_s.ftm=1
	end
	_s.fs=1
	_s.fcb=cbfn or nil
end

function ftick()
	if _s.fs==1 then
		_s.ft+=_s.ftm*_s.ftt
		if _s.ft<=0 or _s.ft>=1 then
			_s.fs=0
			if _s.fcb!=nil then
				_s.fcb()
				_s.fcb=nil
			end
		end
	end
end

function fade(_p)
	local p,kmax,col,dpal,j,k
	p=flr(mid(0,_p,1)*100)
	dpal={0,1,1,2,1,13,6,4,4,9,3,13,1,13,14}
	for j=1,15 do
		col=j
		kmax=(p+(j*1.46))/22
		for k=1,kmax do
			col=dpal[col]
		end
		pal(j,col)
	end
end

--scene
function setscn(_sc)
	_s.csc=_sc
	_s.csc:i()
end

--map
function getflg(x,y,v)
	return fget(mget(x,y),v)
end

function isblk(x,y)
	local col,ovlp,dis
			
	col=getflg(x,y,0)
	ovlp=getflg(x,y,1)
	dis=getflg(x,y,2)
	
	return col or ovlp or dis
end

function scnmap()
	local objs={}
	
	for y=_s.cr,_s.cr+15 do
		for x=_s.cc,_s.cc+15 do
			if isblk(x,y) then
				add(objs,mobj(x*8,y*8,8,8,col,ovlp,dis))
			end	
		end
	end
	
	return objs
end

function mapanm(anms)
	for y=_s.cr,_s.cr+15 do
		for x=_s.cc,_s.cc+15 do
			for a in all(anms) do
				if mget(x,y)>=a[1] and mget(x,y)<a[1]+a[2] then
					mset(x,y,
					a[1]+((_s.t/a[3])%a[2]))
				end
			end	
		end
	end
	
	return objs
end

--operation
function oblts(ap,bp)
	for a in all(ap) do
		a:u()

		for b in all(bp) do
			if b.alive then
				if dis(a,b)<5 then
					printh("dang")
					del(ap,a)
					b:dmg()
				end
			end
		end
		
	end
end

function oall(objs)
	for o in all(objs) do
		o:u()
	end
end

--drawng
function dall(objs)
	for o in all(objs) do
		o:d()
	end
end

function dblts()
	for b in all(_s.blts) do
		b:d()
	end
end

--hit
function hit(x,y,w,h,flg)
	local ts={}
	for i=x,x+w,w do
		if getflg(i/8,y/8,flg) then
			add(ts,
				{
					x=i/8,
					y=y/8,
					f=getflg(i/8,y/8,flg)
				}
			)
		end
		
		if getflg(i/8,(y+h)/8,flg) then
			add(ts,
				{
					x=i/8,
					y=(y+h)/8,
					f=getflg(i/8,(y+h)/8,flg)
				}
			)
		end
	end
	
	return ts
end

--tooltip
function dtltp()
	if _s.tltp!=nil then
		spr(130,_s.tltp.x*8,
		(_s.tltp.y-1)*8+sin(_s.t/50))
		_s.tltp=nil
	end
end

--text
function dtxt()
	if _s.atxt!=nil then
		dr(0+_s.cx,0+_s.cy,128,18,0)
		print("".._s.atxt,5+_s.cx,0+_s.cy,7)
		print("\n"..txts.f[_s.txtt],5+_s.cx,0+_s.cy,10)
		_s.atxt=nil
	end
end

--inventory
function openinv(pinv)
	_s.msts=false
	
	_s.invb=pinv
	_s.invi=1
	
	_s.ftt=0.08
	setfade("out",function()
		_s.dsts=false
		_s.inv=true
		setfade("in")
	end)
--	_s.dsts
end

function closeinv()
	setfade("out",function()
		_s.dsts=true
		_s.inv=false
		_s.msts=true
		setfade("in")
	end)
end

function dinv()
	if _s.inv then
--		dr(32,20,64,88,0)
--		drb(32,20,64,88,1)
		print("inventory\n("..#_s.invb.."/3)"
		,36+_s.cx,24+_s.cy,6)
		
		for i,v in pairs(_s.invb) do
			local inm,q
			
			inm=itms[v[1]].n
			q=v[2]
			
			print(inm.." x "..q,40+_s.cx,36+i*6+_s.cy,6)
		end
	end
end

--camera
function ucam(x,y)
	_s.cc=flr(x/128)*16
	_s.cr=flr(y/128)*16
	_s.cx=flr(x/128)*128
	_s.cy=flr(y/128)*128
	
	if _s.cshk>0 then
		_s.cox=rnd(4)-2
		_s.coy=rnd(4)-2
		_s.cshk-=1
	else
		_s.cox=0
		_s.coy=0
	end
	
--	printh(_s.cc.." ".._s.cr)
	camera(_s.cx+_s.cox,_s.cy+_s.coy)
end

--room
function enterroom(x,y)
	_s.ftt=0.08
	_s.msts=false
	
	_s.rmid="r"..x.."_"..y
	
	_s.oldpx=_s.plyr.x
	_s.oldpy=_s.plyr.y
	
	_s.rmcx=rms[_s.rmid].cx
	_s.rmcy=rms[_s.rmid].cy
	_s.rmcw=rms[_s.rmid].cw
	_s.rmch=rms[_s.rmid].ch
	
	setfade("out",function()
		_s.msts=true
		_s.rmmode=true
		_s.plyr.x=rms[_s.rmid].px
		_s.plyr.y=rms[_s.rmid].py
		
		for i in all(rms[_s.rmid].itms) do
			mset(flr(i.x/8),flr(i.y/8),itms[i.id].f)
		end
		
		setfade("in")
	end)
end

function quitroom()
	_s.msts=true
	
	setfade("out",function()
		_s.msts=true
		_s.rmmode=false
		
		for i in all(rms[_s.rmid].itms) do
			mset(flr(i.x/8),flr(i.y/8),0)
		end
		
		_s.plyr.x=_s.oldpx
		_s.plyr.y=_s.oldpy
		setfade("in")
	end)
end

function takeitm(id,x,y)
	if id==132 then
		add(_s.plyr.inv,{1,1})
		rms[_s.rmid].itms={}
	elseif id==148 then
		add(_s.plyr.inv,{2,1})
		rms[_s.rmid].itms={}
	else 
		add(_s.plyr.inv,{3,1})
		rms[_s.rmid].itms={}
	end
	mset(x,y,0)
end

function gameover()
	_s.msts=false
	_s.usts=false
	_s.ftt=0.02
	
	setfade("out",function()
		_s.dsts=false
		_s.gameover=true
		setfade("in")
	end)
end

function restart()
	_s.ftt=0.02
	
	setfade("out",function()
		defdata()
		defstate()
		setscn(sc1)
		setfade("in")
	end)
end

function ugo()
	if _s.gameover then
		print("\n\nyou kept yourself alive and \nsuccesfully sent the zero \n"..
		"mayday code.\n\nthanks for playing!\napril2020 ludum dare46\n@obsfx\n\npress (🅾️) to play again",_s.cx,_s.cy,7)
	
		if btnp(4) then
			restart()
		end
	end
end

function ded()
	_s.msts=false
	_s.usts=false
	_s.ftt=0.02
	
	setfade("out",function()
		_s.dsts=false
		_s.ded=true
		setfade("in")
	end)
end

function uded()
	if _s.ded then
		print("\n\nyou died!\n"..
		"\n\nthanks for playing!\napril2020 ludum dare46\n@obsfx\n\npress (🅾️) to play again",_s.cx,_s.cy,7)
	
		if btnp(4) then
			restart()
		end
	end
end
-->8
--obj
function mobj(x,y,w,h,col,ovlp,dis)
	local t={
		col=col,
		ovlp=ovlp,
		dis=dis
	}
	
	return merge_t(t,rectangle(x,y,w,h))	
end

function mob(x,y,w,h,sx,sy)
	local t,mt
	
	t={
		mob=true,
		sx=sx,
		sy=sy,
		dx=0,
		dy=0,
		canm=0,
		cld=false,
		flp=false,
		eca=0,
		mv=function(s)
			s.eca=rectangle(x-8,y-8,24,24)
			s.cld=false
			
			local hx=hit(s.x+s.dx,s.y,s.w-s.sx,s.h-s.sy,0)
			local hy=hit(s.x,s.y+s.dy,s.w-s.sx,s.h-s.sy,0)
				
			if #hx>0 then
				s.dx=0
				s.cld=true
			end
				
			if #hy>0 then
				s.dy=0
				s.cld=true
			end
				
			s.x+=s.dx
			s.y+=s.dy
		end
	}
	
	mt=merge_t(t,obj(x,y,w,h,true))
	mt.ovlp=false
	return mt
end

function player(x,y)
	local t={
		plyr=true,
		alive=true,
		hp=15,
		anms={
			--sprite,frame,speed
			{52,4,3},
			{52,2,20}
		},
		
		inv={
		},
		
		bbs=3,
		bx=3,
		by=0,
		bcd=0,
		
		mrx=2,
		mry=2,
		mrf=10,
		
		dmg=function(s)
			_s.cshk=5
			s.hp-=1
			
			if s.hp<1 then
				ded()
			end
		end,
		
		mvu=function(s)
			if _s.msts then
				local mvd=false
		
				s.dx=0
				s.dy=0
			
				if btn(0) then 
					s.dx=-s.sx
					s.flp=true
					mvd=true
					s.bx=-s.bbs
					s.by=0
					
					s.mrx=-2
					s.mry=2
					s.mrf=11
				end
				if btn(1) then 
					s.dx=s.sx
					s.flp=false
					mvd=true
					s.bx=s.bbs
					s.by=0
					
					s.mrx=2
					s.mry=2
					s.mrf=10
				end
				if btn(2) then 
					s.dy=-s.sy
					mvd=true
					s.bx=0
					s.by=-s.bbs
					s.mrx=0
					s.mry=-2
					s.mrf=12
				end
				if btn(3) then 
					s.dy=s.sy
					mvd=true
					s.bx=0
					s.by=s.bbs
					s.mrx=0
					s.mry=2
					s.mrf=13
				end
				if btnp(5) then
					if s.bcd==0 then
						s.bcd=10
						_s.cshk=3
						add(_s.pblts,
						bullet(s.x+s.bx+4,s.y+s.by+6,s.bx,s.by,_s.pblts))
					end
				end
				
				if mvd then
					s:mv()
					s.canm=s.anms[1]
				else
					s.canm=s.anms[2]
				end
				
				s:chckintr()
			end
		end,
	
		u=function(s)
			if s.bcd>0 then
				s.bcd-=1
			end
			s:mvu()
			ucam(s.x,s.y)
			if btnp(4) then
				if _s.inv then
					closeinv()
				else
					openinv(s.inv)
				end
			end
		end,
		
		chckintr=function(s)			
			local x,y=flr(s.x/8),flr(s.y/8)
			
			for y=y-1,y+1 do
				for x=x-1,x+1 do
					if (getflg(x,y,2)) then
						s:dointr(mget(x,y),x,y)
					 s.bcd=2
					end
				end
			end
		end,
		
		dointr=function(s,id,x,y)
			_s.tltp={x=x,y=y}
			if id==71 then
				if #s.inv<3 then
					_s.atxt=txts.prf
				else
					_s.atxt=txts.rf
					if btnp(5) then
						gameover()
					end
				end
			end
			
			if fget(id,7) then
				_s.atxt=txts.rme
				
				if btnp(5) then
					enterroom(x,y)
				end
			end
			
			if fget(id,6) then
				_s.atxt=txts.rmq
				if btnp(5) then
					quitroom()
				end
			end
			
			if fget(id,5) then
				_s.atxt=txts.it
				if btnp(5) then
					takeitm(id,x,y)
				end
			end
		end,
		
		d=function(s)
			spr(
			s.canm[1]+((_s.t/s.canm[3])%s.canm[2]),
			s.x,s.y,1,1,s.flp)
			
			spr(s.mrf,s.x+s.mrx,s.y+s.mry)
		end
	}
	

	local mt=merge_t(t,mob(x,y,8,8,1,1))
	mt.canm=mt.anms[1]
	return mt
end

function bullet(x,y,sx,sy,prt)
	local t,mt
	t={
		x=x,
		y=y,
		bullet=true,
		alv=true,
		flpx=false,
		flpy=false,
		frm=7,
		
		mvu=function(s)
			s.dx=s.sx
			s.dy=s.sy
		
			s:mv()
			if s.cld then
				del(prt,s)
			end
			
			if s.dx!=0 then
				s.frm=7
				if s.dx<0 then
					s.flpx=true
				else
					s.flpx=false
				end
			elseif dy!=0 then
				s.frm=23
				if s.dy<0 then
					s.flpy=false
				else
					s.flpy=true
				end
			end
			
		end,
		
		u=function(s)
			s:mvu()
		end,
		
		d=function(s)
			spr(
			s.frm+((_s.t/10)%2),
			s.x,s.y,1,1,s.flpx,s.flpy)
		end
	}
	
	mt=merge_t(t,mob(x-4,y-4,4,4,sx,sy))
	return mt
end

function enemy(x,y)
	local t={
		enmy=true,
		hp=2,
		anms={
			--sprite,frame,speed
			{36,4,3},
			{36,2,20}
		},
		
		alive=true,
		
		bbs=3,
		bx=3,
		by=0,
		mvdec=0,
		mvdex=0,
		mvdey=0,
		
		alarmed=false,
		trgt={},
		
		firec=0,
		rtc=0,
		
		mvl=function(s)
			s.dx=-s.sx
			if s.rtc==0 then
				s.flp=true
				if s.alarmed then
					s.rtc=30
				end
			end
			mvd=true
		end,
		
		mvr=function(s)
			s.dx=s.sx
			if s.rtc==0 then
				s.flp=false
				if s.alarmed then
					s.rtc=30
				end
			end
			mvd=true
		end,
		
		mvt=function(s)
			s.dy=-s.sy
			mvd=true
		end,
		
		mvb=function(s)
			s.dy=s.sy
			mvd=true
		end,
		
		checkalrm=function(s)
			if dis(_s.plyr,s)<45 then
				s.alarmed=true
				s.trgt=_s.plyr
				
				for en in all(enpl["e".._s.cc.."_".._s.cr]) do
						if en != s then
							if dis(_s.plyr,en)<=dis(_s.plyr,s) then
								s.trgt=en
							end
						end
				end
			end
		end,
		
		alrm=function(s)
			if s.alarmed then
				local mvd=false
				s.sx=0.75
				s.sy=0.75
				
				if dis(s.trgt,s)>16 then
					if abs((_s.plyr.x-s.x))>4 then
						if _s.plyr.x>s.x then
							s:mvr()
							mvd=true
						else
							s:mvl()
							mvd=true
						end
					end
					
					if abs((_s.plyr.y-s.y))>4 then
						if _s.plyr.y>s.y then
							s:mvb()
							mvd=true
						else
							s:mvt()
							mvd=true
						end
					end
				end
				if mvd then
					s:mv()
					
					s.canm=s.anms[1]
				else
					s.canm=s.anms[2]
				end
				
				if s.firec>0 then
					s.firec-=1
				else
					s.firec=rnd(40)+15
					s:fire()
				end
			end
		end,
		
		fire=function(s)
			if abs(s.x-_s.plyr.x)>abs(s.y-_s.plyr.y) then
				s.by=0
				
				if s.x>_s.plyr.x then
					s.bx=-s.bbs
				else
					s.bx=s.bbs
				end
			else
				s.bx=0
				
				if s.y>_s.plyr.y then
					s.by=-s.bbs
				else
					s.by=s.bbs
				end
			end
		
			add(_s.eblts,
			bullet(s.x+s.bx+5,s.y+s.by+5,s.bx,s.by,_s.eblts))
		end,
		
		wlkdecide=function(s)
			s.sx=0.5
			s.sy=0.5
			s.mvdec=45
					
			local rfx,rfy=rnd(30),rnd(30)
			
			if rfx<5 then
				s.mvdex=-1
			elseif rfx>25 then
				s.mvdex=1
			else
				s.mvdex=0
			end
			
			if rfy<2 then
				s.mvdey=-1
			elseif rfx>28 then
				s.mvdey=1
			else
				s.mvdey=0
			end
		end,
		
		mvu=function(s)
			if _s.msts then
				local mvd=false
		
				s.dx=0
				s.dy=0
				
				if s.mvdec>0 then
					s.mvdec-=1
					
					if s.mvdex==-1 then
						s:mvl()
						mvd=true
					elseif s.mvdex==1 then
						s:mvr()
						mvd=true
					end
					
					if s.mvdey==-1 then
						s:mvt()
						mvd=true
					elseif s.mvdey==1 then
						s:mvb()
						mvd=true
					end
				else
					if not s.alarmed then
						s:wlkdecide()
					end
				end
				
				if mvd then
					s:mv()
					
					if s.dx==0 and s.mvdex!=0 then
						s.mvdec=0
					end
					
					if s.dy==0 and s.mvdey!=0 then
						s.mvdec=0
					end
					
					s.canm=s.anms[1]
				else
					s.canm=s.anms[2]
				end
				
			end
		end,
	
		u=function(s)
			if s.alive then
				if s.rtc>0 then
					s.rtc-=1
				end
	
				s:checkalrm()
				if not s.alarmed then
					s:mvu()
				else
					s:alrm()
				end
			end
		end,
		
		dmg=function(s)
			_s.cshk=2
			s.hp-=1
			
			if s.hp<1 then
				s.alive=false
--				mset(flr(s.x/8),flr(s.y/8),41+rnd(2))
--				del(enpl["e".._s.cc.."_".._s.cr],s)
			end
		end,
		
		d=function(s)
			if s.alive then
				spr(
				s.canm[1]+((_s.t/s.canm[3])%s.canm[2]),
				s.x,s.y,1,1,s.flp)
			else
				spr(41,s.x,s.y,1,1,s.flp)
			end
		end
	}
	
	return merge_t(t,mob(x,y,8,8,1,1))
end
-->8
--data

function defdata()
	txts={
		f={
			"\n(❎) interact"
		},
		prf="find cables,tools\nand circuit bords to repair",
		rf="repair rf transmitter",
		rme="enter",
		rmq="quit",
		it="take"
	}
	
	--items
	itms={
		{n="cables",f=132},
		{n="circuit boards",f=148},
		{n="tools",f=164}
	}
	
	--rooms
	rms={
		r26_7={
			px=56,
			py=168,
			cx=8,
			cy=0,
			cw=80,
			ch=64
		},
		r26_12={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56
		},
		r20_22={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56,
			itms={
				{id=1,q=1,x=112,y=152}
			}
		},
		r20_28={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56
		},
		r27_28={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56
		},
		r39_27={
			px=56,
			py=168,
			cx=8,
			cy=0,
			cw=80,
			ch=64
		},
		r34_9={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56
		},
		r43_13={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56
		},
		r40_7={
			px=96,
			py=176,
			cx=80,
			cy=16,
			cw=48,
			ch=56,
			itms={
				{id=2,q=1,x=112,y=152}
			}
		},
		r55_27={
			px=56,
			py=168,
			cx=8,
			cy=0,
			cw=80,
			ch=64,
			itms={
				{id=3,q=1,x=40,y=144}
			}
		},
	}
	
	--enemy placement
	
	enpl={
		e16_16={
			enemy(224,184),
			enemy(184,184),
		},
		e32_16={
			enemy(320,160),
			enemy(344,208),
			enemy(296,216),
		},
		e32_0={
			enemy(304,56),
			enemy(344,72),
			enemy(368,48),
		},
		e48_0={
			enemy(448,88),
			enemy(488,72),
			enemy(456,104),
		},
		e48_16={
			enemy(480,184),
			enemy(408,216),
		}
	}
end
__gfx__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000006000060000000066600000000000000000000000000
00700700000000000000000000000000000000000000000000000000000099000000099000000000000006600660000000666660000000000000000000000000
000770000000000000000000000000000000000000000000000000000909aa9099009aa900000000000006666660000000000000000000000000000000000000
00077000000000000000000000000000000000000000000000000000000099000000099000000000000006600660000000000000000000000000000000000000
00700700000000000000000000000000000000000000000000000000000000000000000000000000000006000060000000000000006666600000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000666000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000060000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000090000009a90000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000009a9000009a90000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000009a9000000900000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000090000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000090000000900000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000900000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000440000000000000000000000000000000000000008440000000000000000000000000000000000000000
00000000000000000000000000000000000044000004444000004400000044000000000000008080008008ff0000000000000000000000000000000000000000
00000000000000000000000000000000000444400055ff0000544440000444400000000008000800008802ff0000000000000000000000000000000000000000
000000000000000000000000000000000055ff000552f2000555ff000055ff000000000048f08880000882220000000000000000000000000000000000000000
000000000000000000000000000000000552f200054222000552f2000552f2000000000044ff4840000844440000000000000000000000000000000000000000
00000000000000000000000000000000054222000544440005422200054222000000000004022444008444500000000000000000000000000000000000000000
00000000000000000000000000000000054444000054440000444400054444000000000000855888008448580000000000000000000000000000000000000000
00000000000000000000000000000000005444000044440000444400005440000000000008805508000008800000000000000000000000000000000000000000
0000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000fff000000ff000000ff000000ff00000000000000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000
044fff00044fff00000fff00044fff000000ff000044ff000044ff000000ff000000000000000000000000000000000000000000000000000000000000000000
4455f500444fff00044fff00444fff000044ff000445f5000444ff000044ff000000000000000000000000000000000000000000000000000000000000000000
4551f1504551f1004441f1504551f1500445f50004d555000445f5000445f5000000000000000000000000000000000000000000000000000000000000000000
4511f1504511f1504551f1504511f15004d5550004dddd0004d5550004d555000000000000000000000000000000000000000000000000000000000000000000
045115000451f5504511f5000451f50004dddd00004ddd0000dddd0004dddd000000000000000000000000000000000000000000000000000000000000000000
00500500500000050500050000055000004ddd0000dddd0000dddd00004dd0000000000000000000000000000000000000000000000000000000000000000000
00000000100000100000000000000000000000000000000000000000000000000000000000000000000000000013000000000000000000000000000000000000
00000000000100000000000001000000001000000000000000000000000033300000050000003000000000000013300000000000000000000000050000000000
00000000000000000000000000000000000001000000011000000000500060300550055000000303000000000013373330000000000000000000050000000000
00000000100000100000010000010010000000000110010200000000000133300550000000050000000000000111787333000500000000000000000000000000
00000000000100000100110000000000001000000d01010000000000000155510000000005000003000000001111173333000000000000000110000000000000
00000000000000000010100000000000000000000001000000000000055155510305055000000500000000000011111100000000500000001330000000000000
00000000100000100010000001000100000001000001000000000000155111110000050000500000000000000000000000000000000220001330000000000000
00000000000100000000000000000000001000000000000000000000111151105030000000000000000000000000200000009990000520031330050000000000
00000000000000000000000000000000000000000000000000000000000500000000100000000000000000000000200003000099003500013900550000000000
00000000000000000000000000000000000000000000000000000000000510000005150000000000000000000000320003330035000500019900500000000000
00000000000000000000000000000000000000000000000000000000001005000000150000000000000000000000300000533000000000019000500000000000
00000000000000000000000000000000000000000000000000000000000505000000000000000000000000000000050001333300500000019000000000000000
00000000100000000000000000000000000000000000000000000000000005000015050000000000000000000000900011353300000000009000000000000000
00000000010010100001000000000000000000000000000000000000001510000010000000000000000000000000000501133330000011000005030000000000
00000000010100010101000000000000000000000000000000000000001515000015050000000000000000000000000050113333100017870005030000000000
00000000000100010101010000000000000000000000000000000000001010000005100000000000000000000005000050011333111113730000530000000000
00000000000000000000000000000000000000000000000000000000000111000000001105050000000000000000000055501533333333300000530000000000
00000000000000000000000000000000000000000000000000000000001111000001051100500050000500050000009000001333331113300000330000000000
00000000000000000000000000000000001000000000000000000000011111100011500000050500000055500000000000001333311003000000330000000000
00000000000000000000000000000000000101000000000000000000011111100015105050055000005005000000000000001333300000000005000000000000
00000000000000000000000000000000001010100000000000000000011151100005151005550000050505000000000000011133300000000005000000000000
00000000000000000000000000000000010101000000000000000000000151101105501000050000050050000000000000171111100013330000000000000000
00000000000000000000000000000000001010000000000000000000000051001150500000050000000050000000000001787110001133300000055000000000
00000000000000000000000000000000000101000000000000000000000050000000500000050000000050000000333301171000000333300000000000000000
00000000000000000000000000000000001000100000000000000000001010100000000000000000000000000033333300330000000000003300000000000000
00000800080000800000000000000000100010000000000000000000010101000010100000000000000000000331111130000000000000333333000000000000
00800080000800800000000000000000001000100000000000000000001010100001010000000000000000009999999000000000000001133333300100000000
00880000000808000000000000000000100010000000000000000000010101000010100000000000000000000000000000500000000000113333000100000000
00080080000088000000000000000000001000100000000000000000001010000001000000000000000000000000000000000000030000013331101100000000
00000800808008000000000000000000100010000000000000000000000100000000000000000000000000000000050000033099995500000111111000000000
08088000808800000000000000000000001000100000000000000000000000000000000000000000000000000000000000000003335500000000110000000000
00888880088888800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011000000000000
00000000000000000000900000000000000000000000000000000000000000000000000000000000000000000000000055505505555505550555055550550555
00000000000000000009a90006660000088888800000000000000000000000000000000000000000000005500000000000000000000000000000000000000000
00000000000000000009a90066666000099999900000000000000000000000000000000000000000055000000000000055505055550555055555550555050555
00000000000000000009a90006660000888888000000000000000000000000000000000000000000000000000000000055505055550555055555550555050555
00000000000000000000900000000000999999000000000000000000000000000000000000000000005500000000000000000000000000000000000000000000
00000000000000000000000000000000008888800000000000000000000000000000000000000000000000000000000055505055555505555055055555050555
00000000000000000000a00000000000009999900000000000000000000000000000000000000000055505000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000055055504404404444444044440555055
0000000000000000000000000000000000bbb0000000000000000000444044401111111100000000000000000000000000000004000000000000000040000000
000000000000000000000000000000000bbbb0b00000000000000000444044401111111100000000000500000000000050550504040004000000004040505505
000000000000000000000000000000000b3bb0bb0000000000000000000000001111111100000000000000000000000000550004040000000040004040005500
000000000000000000000000000000000b33b0bb0000000000000000404444401111111100000000005505000000000050550504000404040040004040505505
000000000000000000000000000000000bbbb0b30000000000000000404444401111111100000000000000000000000050000500040400000000400000500005
00000000000000000000000000000000000000b30000000000000000000000001111111100000000055005500000000050550504000400040000400040505505
000000000000000000000000000000000000bbbb0000000000000000444044401111111100000000000000000000000050550500000000000000004000505505
00000000000000000000000000000000000000000000000000000000000000001111111100000000000505000000000050000504000000000000000040500005
44044404404440440000000000000000000000000000000000000000000000000000000050400005555005500000000000000004000000000000000040000000
00000000000000000000000000000000000000000000000000000000000000000000000050400005000000000000000050550504040004000000000040505505
00550504405055000000000000000000006666600000000000000000000000000000000050400005055550550000000000000000040004040000000000000000
50000500005000050000000000000000006000600000000000000000000000000000000050400005000000000000000050550504040400040000000040505505
50550504405055050000000000000000066666660000000000000000000000000000000050400005005055000000000050000500000400040000000000500005
00550004400055000000000000000000666666660000000000000000000000000000000050400005000000000000000000550504000400000000000040505500
50550504405055000000000000000000666666660000000000000000000000000000000055000055000500000000000050550004000000040000000040005505
00550504405055050000000000000000000000000000000000000000000000000000000055000055000000000000000050000504000000000000000040500005
00000004400000000000000000000000000000000000000055567655550550555050555555544455505055500000000055055504404404444444044440555055
05550504405055000000000000000000000000000000000005777775000000000000000005444445000000000000000000000000000000000000000000000000
05550504405055500000000000000000000000000000000055676765555050555550550555444445555055000000000055505055555505555055055555050555
05550504405055500000000000000000000000000000000005676765000000000000000005444445000000000000000000000000000000000000000000000000
00550500005055500000000000000000000000000000000055777775505555055505055555444005550505500000000055505055550555055555550555050555
00550504405055000000000000000000000000000000000005676765000000000000000005444445000000000000000055505055550555055555550555050555
00000000000000000000000000000000000000000000000055676765555055555550550555444445555055000000000000000000000000000000000000000000
44044404404440440000000000000000000000000000000000000000000000000000000000000000000000000000000055505505555505550555055550550555
00000000000000000000000000000000000000000000000044044404404440440000000000000000000000000000000000000000000000000000000000000000
00000000055555500000000000000000055555500000000000000000000000000000000000000000000005500000000000000000000000000000000000000000
00000000050000500000000000000000050000500000000000550504405055000000000000000000055000000000000000000000000000000000000000000000
00000000050550555555555555005505550550500000000050000500005000050000000000000000000000000000000000000000000000000000000000000000
00000000050550555555555555505005550550500000000050550504405055050000000000000000005500000000000000000000000000000000000000000000
00000000050000500500500505005005050000500000000000550004400055000000000000000000000000000000000000000000000000000000000000000000
00000000055555500000000000000000055555500000000050550504405055000000000000000000055505000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000000550504405055050000000000000000000000000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000050550504405055050000000050400005000000000000000000000000000000000000000000000000
00000000000550000400040000000040000550000000000050550504405055050000000050400005000500000000000000000000000000000000000000000000
00000000000550000400000000400040000550000000000050550004400055000000000050400005000000000000000000000000000000000000000000000000
00000000000550000004040400400040000550000000000000550504405055050000000050400005005505000000000000000000000000000000000000000000
00000000000000000404000000004000000000000000000050000500005000050000000050400005000000000000000000000000000000000000000000000000
00000000000550000004000400004000000550000000000050550504405055050000000050400005055005500000000000000000000000000000000000000000
00000000000550000000000000000040000550000000000000000000000000000000000055000055000000000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000044044404404440440000000055000055000505000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000400040005555550000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000400040405000050000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000404000405055050000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000004000405055050000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000004000005000050000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000405555550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000550000000000000000000000550000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555500000000000000000055555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000050000500000000000000000050000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000050550555555555555005505550550500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000050550555555555555505005550550500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000050000500500500505005005050000500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055555500000000000000000055555500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000050000000100000000000000000000000000000000010000000000000000000001010101000101000001010000000000000000000000000100
0000000025000000000001000101010100000000250000010000010001000001000000002500000000468600010000010101000000000101010101000101010100010101010000000000000000000000000100000100000000000000000000000001000101000000000000000000000000010101010000000000000000000000
__map__
6767676767676767676767676767676767676767676767676767676767676767696767676967676767676a6a6a676a676767676767676967676767676767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
676868686a696967677767676768676967676700000067670068676869676867696967676767696a6a67676767676a676769696969696967676969676767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
68686a6a6a6a7777770077777768686a67000000690000000000000069696767676767676767696969696967676767676767676767676969696969676767676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
676a6a676a774b4c714e4200006867696940406969809797979797976969696767676a6a67000000749797970000686767676a6a670000e3404040000067686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6768696967425b5c5d5e400064686a696940697777979797979797979769696767676a4040404097979797970000686767676a40404040e14074404000e4686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67676a6977716b6c6d6e400074686967674077008097979797979797977768676700749797974097979797974000676767409797979740e14040714040e4676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67686a6a40717b7c7d7e4044747768676740004280bab7bab7b7b9b7ba00686767979797979774b7b9b7b8ba404074747474b7b8b6ba74d17474404040e4686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67676769404071577170444474676767676a0000808045420000aa00000067676797979797970000aa7440404040747474740000404040d10074404040e4676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67676868676740587100000074776767696a740067690000000074979797686767b7b9b7b8ba0042007440404074747474744040404040f1f2f2f34040f4746700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67676777777740404040420074676867696868747769004200979797979767676700aa747474744040740074979797686800804040404040404040404074676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6869676a6a510057480000007442426769687774007774747497979797976867670040406940747474749797979797686700404040696940407440404040676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
68686a77700049474040400074424574777740744040744052b7b9b7b8ba6767684040696940404040749797979797686840404040696940407440404040406700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67686a4445704878494040007474747474747474747474747474aa456967676768404042454645404074b7b9b7b8ba676869694040404040407440404040406700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
68686769676970404049000000006745676767674040404074404074746968676800404040404040407440aa404068676869694040407140407440004040686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
6968686969696768676769696967686867686769696769747474747467696867676840686840404040747474696967676768696868404040407474006969676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
67676768676767686867676a6767676867696768676767677474747469696767676868686868686940744040696767676768686868686869407469696767676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000006769676969696969007474006969676767676767676740d440744040404067676767676767676867407469696767676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000008c8d8e8d8e8f000000000000006969696969676769007474747469696767676767670000d440747400000068676767676969696867407469676869686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00008cb09d009d9eb18f0000008c8e8f6768000074979797007400007400697440676868670000e14074c1c3000068676868686867696867407467686969676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00009cae9d009d9eae9f008c8eb0009f6768009797979797747400007474747400404040e3f3f2f44074d400000067676868e36767676767407467696967676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00009c000000ad00009f00acaeae009f6768749797979797740000000074747474747474740000007474d400006868676867d17474000000747467696867686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000bcbdbdbebea9bebf00acad00ad9f676867b7b9b7b8ba744343004068747400000000004300000074f1f2f3f468676867000000430000007467676769686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000008a9a9a0000bca9bebebf67696940aa7474747443404040696967674343000043000000744040404068676767430000430000007440404069686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000008a9a8a000067696840400000007400000040686967670080979797979797747400006767676767e49797979797977474000067676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000006768680074979797740000749797976767009797979797979797740000006767676797979797979797974040c3c2676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000068680097979797977400979797979767680097979797979797977400434567676767979797979797979774004345676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000686800979797979774749797979797676800bab7bab7b7b9b7ba7400676768676767bab7bab7b7b9b7ba74006767686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000676800b7b9b7b8ba0074b7b9b7b8ba6768004040404040aa747474000068686767674040404040aa747474000068686700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000067686774aa000000747400aa67696767676840686840404040404000696967676767404040404040404040006969676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000067696974747474747474747474696967676868686868686969696869696767676768404040404040404067696767676700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000067676769696767676767676767676767676767676767676767676767676767676767676767676767676767676767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000067676767676767676767676767676767676767676767676767676767676767676767676767676767676767676767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
